/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package uidialog;

import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import model.TipTermina;
import communication.Communication;
import formController.TipTerminaFormController;
import java.awt.event.ActionListener;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;
import uiform.TipTerminaForm;

/**
 *
 * @author milan
 */
public class TipTerminaDialog extends javax.swing.JDialog {

    /**
     * Creates new form TipTerminaDialog
     */
    private TipTermina tt;
    private TipTerminaForm parent;
    private TipTerminaFormController controller;
    public TipTerminaDialog(java.awt.Frame parent, boolean modal, TipTermina tt, TipTerminaFormController controller) {
        super(parent, modal);
        initComponents();
        this.tt=tt;
        this.parent=(TipTerminaForm) parent;
        this.controller=controller;
       // fillFields();
       // setLocationRelativeTo(null);
       // setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldName = new javax.swing.JTextField();
        jLabelNameValidation = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldPrice = new javax.swing.JTextField();
        jLabelPriceValidation = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jButtonChange = new javax.swing.JButton();
        jButtonSaveChanges = new javax.swing.JButton();
        jButtonAdd = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jButtonBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Podešavanja tipa termina");
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Naziv:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 80, 20));
        jPanel1.add(jTextFieldName, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 20, 130, 20));

        jLabelNameValidation.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jLabelNameValidation.setForeground(new java.awt.Color(255, 0, 0));
        jPanel1.add(jLabelNameValidation, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 40, 140, 20));

        jLabel2.setText("Cena sata:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 80, 20));
        jPanel1.add(jTextFieldPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 60, 130, 20));

        jLabelPriceValidation.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jLabelPriceValidation.setForeground(new java.awt.Color(255, 0, 0));
        jPanel1.add(jLabelPriceValidation, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 80, 140, 20));

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButtonChange.setText("Izmeni");
        jButtonChange.setFocusPainted(false);
        jButtonChange.setFocusable(false);
        jButtonChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonChangeActionPerformed(evt);
            }
        });
        jPanel2.add(jButtonChange, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 10, 100, 25));

        jButtonSaveChanges.setText("Sačuvaj ");
        jButtonSaveChanges.setFocusPainted(false);
        jButtonSaveChanges.setFocusable(false);
        jButtonSaveChanges.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveChangesActionPerformed(evt);
            }
        });
        jPanel2.add(jButtonSaveChanges, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 10, 100, 25));

        jButtonAdd.setText("Dodaj");
        jButtonAdd.setFocusPainted(false);
        jButtonAdd.setFocusable(false);
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });
        jPanel2.add(jButtonAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 10, 100, 25));

        jButtonDelete.setText("Obriši");
        jButtonDelete.setFocusPainted(false);
        jButtonDelete.setFocusable(false);
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });
        jPanel2.add(jButtonDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 40, 100, 25));

        jButtonBack.setText("Nazad");
        jButtonBack.setFocusPainted(false);
        jButtonBack.setFocusable(false);
        jButtonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBackActionPerformed(evt);
            }
        });
        jPanel2.add(jButtonBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 70, 100, 25));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public TipTermina getTt() {
        return tt;
    }

    public void setTt(TipTermina tt) {
        this.tt = tt;
    }

    public TipTerminaForm getParent() {
        return parent;
    }

    public void setParent(TipTerminaForm parent) {
        this.parent = parent;
    }

    public TipTerminaFormController getController() {
        return controller;
    }

    public void setController(TipTerminaFormController controller) {
        this.controller = controller;
    }

    public JButton getjButtonAdd() {
        return jButtonAdd;
    }

    public void setjButtonAdd(JButton jButtonAdd) {
        this.jButtonAdd = jButtonAdd;
    }

    public JButton getjButtonBack() {
        return jButtonBack;
    }

    public void setjButtonBack(JButton jButtonBack) {
        this.jButtonBack = jButtonBack;
    }

    public JButton getjButtonChange() {
        return jButtonChange;
    }

    public void setjButtonChange(JButton jButtonChange) {
        this.jButtonChange = jButtonChange;
    }

    public JButton getjButtonDelete() {
        return jButtonDelete;
    }

    public void setjButtonDelete(JButton jButtonDelete) {
        this.jButtonDelete = jButtonDelete;
    }

    public JButton getjButtonSaveChanges() {
        return jButtonSaveChanges;
    }

    public void setjButtonSaveChanges(JButton jButtonSaveChanges) {
        this.jButtonSaveChanges = jButtonSaveChanges;
    }

    public JLabel getjLabel1() {
        return jLabel1;
    }

    public void setjLabel1(JLabel jLabel1) {
        this.jLabel1 = jLabel1;
    }

    public JLabel getjLabel2() {
        return jLabel2;
    }

    public void setjLabel2(JLabel jLabel2) {
        this.jLabel2 = jLabel2;
    }

    public JLabel getjLabelNameValidation() {
        return jLabelNameValidation;
    }

    public void setjLabelNameValidation(JLabel jLabelNameValidation) {
        this.jLabelNameValidation = jLabelNameValidation;
    }

    public JLabel getjLabelPriceValidation() {
        return jLabelPriceValidation;
    }

    public void setjLabelPriceValidation(JLabel jLabelPriceValidation) {
        this.jLabelPriceValidation = jLabelPriceValidation;
    }

    public JPanel getjPanel1() {
        return jPanel1;
    }

    public void setjPanel1(JPanel jPanel1) {
        this.jPanel1 = jPanel1;
    }

    public JPanel getjPanel2() {
        return jPanel2;
    }

    public void setjPanel2(JPanel jPanel2) {
        this.jPanel2 = jPanel2;
    }

    public JTextField getjTextFieldName() {
        return jTextFieldName;
    }

    public void setjTextFieldName(JTextField jTextFieldName) {
        this.jTextFieldName = jTextFieldName;
    }

    public JTextField getjTextFieldPrice() {
        return jTextFieldPrice;
    }

    public void setjTextFieldPrice(JTextField jTextFieldPrice) {
        this.jTextFieldPrice = jTextFieldPrice;
    }

    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        /*if(!validation())
            return;
        String name = jTextFieldName.getText();
        String priceString = jTextFieldPrice.getText();
        double price = Double.parseDouble(priceString);
        TipTermina tt = new TipTermina();
        tt.setCenaSata(price);
        tt.setNazivTipa(name);

        try {
            boolean b = Communication.getInstance().kreirajTipTermina(tt);
            if(b){
                JOptionPane.showMessageDialog(this, "Uspešno kreiran tip termina.","Kreiranje tipa termina",JOptionPane.INFORMATION_MESSAGE);
                this.dispose();
                parent.fillTable();
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Greška prilikom kreiranja tipa termina.\n"+ex.getMessage(),"Kreiranje tipa termina",JOptionPane.ERROR_MESSAGE);
        }*/
       
    }//GEN-LAST:event_jButtonAddActionPerformed

    private void jButtonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBackActionPerformed
      // this.dispose();
    }//GEN-LAST:event_jButtonBackActionPerformed

    private void jButtonChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonChangeActionPerformed
        /*jButtonChange.setVisible(false);
            jButtonDelete.setVisible(false);
            jButtonSaveChanges.setEnabled(true);
            jTextFieldName.setEnabled(true);
            jTextFieldPrice.setEnabled(true);*/
    }//GEN-LAST:event_jButtonChangeActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        /*int i =JOptionPane.showConfirmDialog(rootPane, "Da li ste sigurni da želite da obrišete tip termina?","Brisanje tipa termina",JOptionPane.YES_NO_OPTION);
        
        if(i == JOptionPane.YES_OPTION){
        try {
            boolean b = Communication.getInstance().obrisiTipTermina(tt);
            if(b){
                JOptionPane.showMessageDialog(rootPane, "Uspešno obrisan tip termina.","Brisanje tipa termina",JOptionPane.INFORMATION_MESSAGE);
                parent.fillTable();
                this.dispose();
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, "Greška prilikom brisanja tipa termina. \n"+ex.getMessage(),"Brisanje tipa termina",JOptionPane.ERROR_MESSAGE);
        }
        }*/
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jButtonSaveChangesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveChangesActionPerformed

            /*if(!validation() || !isEdited())
                return;
            
            try{
                String name = jTextFieldName.getText();
                double price = Double.parseDouble(jTextFieldPrice.getText());
                tt.setNazivTipa(name);
                tt.setCenaSata(price);
                boolean b = Communication.getInstance().promeniTipTermina(tt);
                if(b){
                    JOptionPane.showMessageDialog(rootPane, "Uspešno ažuriran tip termina.","Ažuriranje tipa termina",JOptionPane.INFORMATION_MESSAGE);
                    parent.fillTable();
                    this.dispose();
                }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, "Greška prilikom ažuriranja tipa termina. \n"+ex.getMessage(),"Ažuriranje tipa termina",JOptionPane.ERROR_MESSAGE);
        }*/
    }//GEN-LAST:event_jButtonSaveChangesActionPerformed

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonBack;
    private javax.swing.JButton jButtonChange;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonSaveChanges;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelNameValidation;
    private javax.swing.JLabel jLabelPriceValidation;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField jTextFieldName;
    private javax.swing.JTextField jTextFieldPrice;
    // End of variables declaration//GEN-END:variables

    /*private void fillFields() {
        if(tt==null){
            jButtonDelete.setVisible(false);
            jButtonChange.setVisible(false);
            jButtonSaveChanges.setVisible(false);
        }else{
            jButtonAdd.setVisible(false);
            jButtonSaveChanges.setEnabled(false);
            jTextFieldName.setText(tt.getNazivTipa());
            jTextFieldPrice.setText(Double.toString(tt.getCenaSata()));
            jTextFieldName.setEnabled(false);
            jTextFieldPrice.setEnabled(false);
        }
    }
    
    private boolean validation(){
        String name = jTextFieldName.getText();
        String priceString = jTextFieldPrice.getText();
        double price = 0;
        
        boolean valid = true;
        if(name.isEmpty()){
            valid=false;
            jLabelNameValidation.setText("Unesite naziv");
        }else if(!name.matches("^[a-zA-Z ]+$")){
            jLabelNameValidation.setText("Naziv mora sadržati slova");
            valid=false;
        }
        if(priceString.isEmpty()){
            valid=false;
            jLabelPriceValidation.setText("Popunite polje.");
        }else {
            try {
                price = Double.parseDouble(priceString);
                if (price < 0) {
                    valid = false;
                    jLabelPriceValidation.setText("Cena mora biti pozitivan broj");
                } else {
                    jLabelPriceValidation.setText("");
                }
            } catch (NumberFormatException e) {
                valid = false;
                jLabelPriceValidation.setText("Unesite validan broj");
            }
        }
        return true;
    }

    private boolean isEdited() {
        if(tt.getNazivTipa().equals(jTextFieldName.getText()) && tt.getCenaSata()==Double.parseDouble(jTextFieldPrice.getText())){
            jLabelNameValidation.setText("Niste izvršili izmenu");
            jLabelPriceValidation.setText("Niste izvršili izmenu");
            return false;
        }
        return true;
    }*/

    public void backActionListener(ActionListener actionListener) {
        jButtonBack.addActionListener(actionListener);
    }

    public void changeActionListener(ActionListener actionListener) {
        jButtonChange.addActionListener(actionListener);
    }

    public void saveActionListener(ActionListener actionListener) {
        jButtonSaveChanges.addActionListener(actionListener);
    }

    public void addActionListener(ActionListener actionListener) {
        jButtonAdd.addActionListener(actionListener);
    }

    public void deleteActionListener(ActionListener actionListener) {
        jButtonDelete.addActionListener(actionListener);
    }
}
