/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package uidialog;

import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import communication.Communication;
import formController.NivoSkijanjaFormController;
import java.awt.event.ActionListener;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;
import model.NivoSkijanja;
import uiform.NivoSkijanjaForm;

/**
 *
 * @author milan
 */
public class NivoSkijanjaDialog extends javax.swing.JDialog {

    /**
     * Creates new form NivoSkijanjaDialog
     */
    private NivoSkijanja ns;
    private NivoSkijanjaForm parent;
    private NivoSkijanjaFormController controller;
    public NivoSkijanjaDialog(java.awt.Frame parent, boolean modal, NivoSkijanja ns, NivoSkijanjaFormController controller) {
        super(parent, modal);
        initComponents();
        this.ns=ns;
        this.parent=(NivoSkijanjaForm) parent;
        this.controller=controller;
        //fillFields();
        //setLocationRelativeTo(null);
        
    }

    public NivoSkijanjaFormController getController() {
        return controller;
    }

    public void setController(NivoSkijanjaFormController controller) {
        this.controller = controller;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldName = new javax.swing.JTextField();
        jLabelValidation = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jButtonChange = new javax.swing.JButton();
        jButtonSave = new javax.swing.JButton();
        jButtonAdd = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jButtonBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Podešavanja nivoa skijanja");
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Naziv nivoa:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(8, 18, 100, 20));
        jPanel1.add(jTextFieldName, new org.netbeans.lib.awtextra.AbsoluteConstraints(93, 20, 150, 20));

        jLabelValidation.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jLabelValidation.setForeground(new java.awt.Color(255, 0, 0));
        jPanel1.add(jLabelValidation, new org.netbeans.lib.awtextra.AbsoluteConstraints(94, 40, 160, 17));

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButtonChange.setText("Izmeni");
        jButtonChange.setFocusPainted(false);
        jButtonChange.setFocusable(false);
        jButtonChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonChangeActionPerformed(evt);
            }
        });
        jPanel2.add(jButtonChange, new org.netbeans.lib.awtextra.AbsoluteConstraints(65, 20, 130, 25));

        jButtonSave.setText("Sačuvaj");
        jButtonSave.setFocusPainted(false);
        jButtonSave.setFocusable(false);
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });
        jPanel2.add(jButtonSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(65, 20, 130, 25));

        jButtonAdd.setText("Dodaj");
        jButtonAdd.setFocusPainted(false);
        jButtonAdd.setFocusable(false);
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });
        jPanel2.add(jButtonAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(65, 20, 130, 25));

        jButtonDelete.setText("Obriši");
        jButtonDelete.setFocusPainted(false);
        jButtonDelete.setFocusable(false);
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });
        jPanel2.add(jButtonDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(65, 50, 130, 25));

        jButtonBack.setText("Nazad");
        jButtonBack.setFocusPainted(false);
        jButtonBack.setFocusable(false);
        jButtonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBackActionPerformed(evt);
            }
        });
        jPanel2.add(jButtonBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(65, 80, 130, 25));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public NivoSkijanja getNs() {
        return ns;
    }

    public void setNs(NivoSkijanja ns) {
        this.ns = ns;
    }

    public NivoSkijanjaForm getParent() {
        return parent;
    }

    public void setParent(NivoSkijanjaForm parent) {
        this.parent = parent;
    }

    public JButton getjButtonAdd() {
        return jButtonAdd;
    }

    public void setjButtonAdd(JButton jButtonAdd) {
        this.jButtonAdd = jButtonAdd;
    }

    public JButton getjButtonBack() {
        return jButtonBack;
    }

    public void setjButtonBack(JButton jButtonBack) {
        this.jButtonBack = jButtonBack;
    }

    public JButton getjButtonChange() {
        return jButtonChange;
    }

    public void setjButtonChange(JButton jButtonChange) {
        this.jButtonChange = jButtonChange;
    }

    public JButton getjButtonDelete() {
        return jButtonDelete;
    }

    public void setjButtonDelete(JButton jButtonDelete) {
        this.jButtonDelete = jButtonDelete;
    }

    public JButton getjButtonSave() {
        return jButtonSave;
    }

    public void setjButtonSave(JButton jButtonSave) {
        this.jButtonSave = jButtonSave;
    }

    public JLabel getjLabel1() {
        return jLabel1;
    }

    public void setjLabel1(JLabel jLabel1) {
        this.jLabel1 = jLabel1;
    }

    public JLabel getjLabelValidation() {
        return jLabelValidation;
    }

    public void setjLabelValidation(JLabel jLabelValidation) {
        this.jLabelValidation = jLabelValidation;
    }

    public JPanel getjPanel1() {
        return jPanel1;
    }

    public void setjPanel1(JPanel jPanel1) {
        this.jPanel1 = jPanel1;
    }

    public JPanel getjPanel2() {
        return jPanel2;
    }

    public void setjPanel2(JPanel jPanel2) {
        this.jPanel2 = jPanel2;
    }

    public JTextField getjTextFieldName() {
        return jTextFieldName;
    }

    public void setjTextFieldName(JTextField jTextFieldName) {
        this.jTextFieldName = jTextFieldName;
    }

    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        /*try {
            if(!validation())
                return;
            NivoSkijanja ns = new NivoSkijanja();
            ns.setNazivNivoa(jTextFieldName.getText());
            boolean b = Communication.getInstance().kreirajNivoSkijanja(ns);
            if(b){
                JOptionPane.showMessageDialog(rootPane, "Uspešno kreiran nivo skijanja.","Kreiranje nivoa skijanja",JOptionPane.INFORMATION_MESSAGE);
                parent.fillTable();
                this.dispose();
                return;
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, "Greška prilikom kreiranja nivoa skijanja. \n"+ex.getMessage(),"Kreiranje nivoa skijanja",JOptionPane.ERROR_MESSAGE);
        }*/
        
    }//GEN-LAST:event_jButtonAddActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        /*int i =JOptionPane.showConfirmDialog(rootPane, "Da li ste sigurni da želite da obrišete nivo skijanja?","Brisanje nivoa skijanja",JOptionPane.YES_NO_OPTION);
        if(i == JOptionPane.YES_OPTION){
            try {
                boolean b = Communication.getInstance().obrisiNivoSkijanja(ns);
                if(b){
                    JOptionPane.showMessageDialog(rootPane, "Uspešno obrisan nivo skijanja.","Brisanje nivoa skijanja",JOptionPane.INFORMATION_MESSAGE);
                    parent.fillTable();
                    this.dispose();
                }
            } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, "Greška prilikom brisanja nivoa skijanja."+ex.getMessage(),"Brisanje nivoa skijanja",JOptionPane.ERROR_MESSAGE);
            }
        }*/
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jButtonChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonChangeActionPerformed
        /*jButtonSave.setVisible(true);
        jButtonChange.setVisible(false);
        jButtonDelete.setVisible(false);
        jTextFieldName.setEnabled(true);*/
    }//GEN-LAST:event_jButtonChangeActionPerformed

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        /*try {        
            if(!validation() || !isEdited())
                return;
            
            ns.setNazivNivoa(jTextFieldName.getText());
            boolean b = Communication.getInstance().promeniNivoSkijanja(ns);
            if(b){
                JOptionPane.showMessageDialog(rootPane, "Uspešno ažuriran nivo skijanja.","Ažuriranje nivoa skijanja",JOptionPane.INFORMATION_MESSAGE);
                parent.fillTable();
                this.dispose();
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, "Greška prilikom ažuriranja nivoa skijanja. \n"+ex.getMessage(),"Ažuriranje nivoa skijanja",JOptionPane.ERROR_MESSAGE);
        }*/
    }//GEN-LAST:event_jButtonSaveActionPerformed

    private void jButtonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBackActionPerformed
        //this.dispose();
    }//GEN-LAST:event_jButtonBackActionPerformed

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonBack;
    private javax.swing.JButton jButtonChange;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelValidation;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField jTextFieldName;
    // End of variables declaration//GEN-END:variables

   
/*
    private void fillFields() {
        if(ns == null){
            jTextFieldName.setText("");
            jButtonAdd.setVisible(true);
            jButtonChange.setVisible(false);
            jButtonSave.setVisible(false);
            jButtonDelete.setVisible(false);
        }
        else{
            jTextFieldName.setText(ns.getNazivNivoa());
            jButtonAdd.setVisible(false);
            jButtonSave.setVisible(false);
            jTextFieldName.setEnabled(false);
            
        }
    }

    private boolean validation() {
            jLabelValidation.setText("");
            String name = jTextFieldName.getText();
            boolean valid = true;
            if(name.isEmpty()){
                valid=false;
                jLabelValidation.setText("Unesite naziv");
            }else if(!name.matches("^[a-zA-Z ]+$")){
                jLabelValidation.setText("Naziv mora sadržati slova");
                valid=false;
            }   
            return valid;
    }

    private boolean isEdited() {
        if(ns.getNazivNivoa().equals(jTextFieldName.getText())){
            jLabelValidation.setText("Niste izvršili izmenu");
            return false;
        }
        return true;
    }*/

    public void saveActionListener(ActionListener actionListener) {
        jButtonSave.addActionListener(actionListener);
    }

    public void changeActionListener(ActionListener actionListener) {
        jButtonChange.addActionListener(actionListener);
    }

    public void deleteActionListener(ActionListener actionListener) {
        jButtonDelete.addActionListener(actionListener);
    }

    public void addActionListener(ActionListener actionListener) {
        jButtonAdd.addActionListener(actionListener);
    }
    
     public void backActionListener(ActionListener actionListener) {
         jButtonBack.addActionListener(actionListener);
     }
}
