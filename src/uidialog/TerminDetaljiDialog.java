/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package uidialog;

import com.toedter.calendar.JDateChooser;
import java.sql.SQLIntegrityConstraintViolationException;
import java.io.IOException;
import java.time.Duration;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.ZoneId;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.SpinnerDateModel;
import model.Instruktor;
import model.Skijas;
import model.Termin;
import model.TerminSkijas;
import model.TipTermina;
import table_model.SkijasTableModel;
import table_model.TerminSkijasTableModel;
import communication.Communication;
import formController.TerminFormController;
import java.awt.event.ActionListener;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import uiform.TerminForm;

/**
 *
 * @author milan
 */
public class TerminDetaljiDialog extends javax.swing.JDialog {

    /**
     * Creates new form TerminDetaljiJDialog
     */
    private Termin t;
    private TerminForm parent;
    private TerminFormController controller;
    public TerminDetaljiDialog(java.awt.Frame parent, boolean modal,Termin t, TerminFormController controller) {
        super(parent, modal);
        initComponents();
        this.t=t;
        this.parent=(TerminForm) parent;
        this.controller=controller;
        //fillComboBoxes();
        //fillFields();
        //fillTable();
        //configureFields(false);
        //configureVisibility();
        //setLocationRelativeTo(null);
        //setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jDateChooser = new com.toedter.calendar.JDateChooser();
        jSpinnerVremeOd = new javax.swing.JSpinner();
        jSpinnerVremeDo = new javax.swing.JSpinner();
        jComboBoxTipTermina = new javax.swing.JComboBox<>();
        jSpinnerBrojSkijasa = new javax.swing.JSpinner();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jComboBoxInstruktor = new javax.swing.JComboBox<>();
        jButtonChange = new javax.swing.JButton();
        jButtonSave = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jButtonBack = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jButtonAddSkijas = new javax.swing.JButton();
        jComboBoxSkijas = new javax.swing.JComboBox<>();
        jButtonDeleteSkijas = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableSkijasi = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Detalji termina");
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel2.setText("Datum:");

        jLabel3.setText("Vreme do:");

        jLabel4.setText("Vreme od:");

        jLabel5.setText("Tip termina:");

        jLabel6.setText("Broj skijaša:");

        SpinnerDateModel modelOd = new SpinnerDateModel(new Date(), null, null, Calendar.MINUTE);
        jSpinnerVremeOd.setModel(modelOd);
        JSpinner.DateEditor editorOd = new JSpinner.DateEditor(jSpinnerVremeOd, "HH:mm");
        jSpinnerVremeOd.setEditor(editorOd);

        SpinnerDateModel modelDo = new SpinnerDateModel(new Date(), null, null, Calendar.MINUTE);
        jSpinnerVremeDo.setModel(modelDo);
        JSpinner.DateEditor editorDo = new JSpinner.DateEditor(jSpinnerVremeDo, "HH:mm");
        jSpinnerVremeDo.setEditor(editorDo);

        jLabel7.setText("Podaci o terminu");

        jLabel8.setText("Instruktor:");

        jButtonChange.setText("Izmeni");
        jButtonChange.setFocusPainted(false);
        jButtonChange.setFocusable(false);
        jButtonChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonChangeActionPerformed(evt);
            }
        });

        jButtonSave.setText("Sacuvaj");
        jButtonSave.setFocusPainted(false);
        jButtonSave.setFocusable(false);
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });

        jButtonDelete.setText("Obriši");
        jButtonDelete.setFocusPainted(false);
        jButtonDelete.setFocusable(false);
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jSpinnerVremeDo, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBoxInstruktor, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jSpinnerVremeOd, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBoxTipTermina, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jSpinnerBrojSkijasa))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButtonSave, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonChange, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(57, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxInstruktor, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSpinnerVremeOd, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSpinnerVremeDo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxTipTermina, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSpinnerBrojSkijasa, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButtonChange)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonSave)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonDelete)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jButtonBack.setText("Nazad");
        jButtonBack.setFocusPainted(false);
        jButtonBack.setFocusable(false);
        jButtonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonBack, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(403, 403, 403))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jButtonBack)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel9.setText("Skijaši");

        jButtonAddSkijas.setText("Dodaj");
        jButtonAddSkijas.setFocusPainted(false);
        jButtonAddSkijas.setFocusable(false);
        jButtonAddSkijas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddSkijasActionPerformed(evt);
            }
        });

        jButtonDeleteSkijas.setText("Obriši ");
        jButtonDeleteSkijas.setFocusPainted(false);
        jButtonDeleteSkijas.setFocusable(false);
        jButtonDeleteSkijas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteSkijasActionPerformed(evt);
            }
        });

        jTableSkijasi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableSkijasi);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 561, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                            .addComponent(jComboBoxSkijas, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonAddSkijas, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonDeleteSkijas, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(23, 23, 23))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAddSkijas)
                    .addComponent(jComboBoxSkijas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonDeleteSkijas))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(27, 27, 27))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public Termin getT() {
        return t;
    }

    public void setT(Termin t) {
        this.t = t;
    }

    public TerminForm getParent() {
        return parent;
    }

    public void setParent(TerminForm parent) {
        this.parent = parent;
    }

    public TerminFormController getController() {
        return controller;
    }

    public void setController(TerminFormController controller) {
        this.controller = controller;
    }

    public JButton getjButtonAddSkijas() {
        return jButtonAddSkijas;
    }

    public void setjButtonAddSkijas(JButton jButtonAddSkijas) {
        this.jButtonAddSkijas = jButtonAddSkijas;
    }

    public JButton getjButtonBack() {
        return jButtonBack;
    }

    public void setjButtonBack(JButton jButtonBack) {
        this.jButtonBack = jButtonBack;
    }

    public JButton getjButtonChange() {
        return jButtonChange;
    }

    public void setjButtonChange(JButton jButtonChange) {
        this.jButtonChange = jButtonChange;
    }

    public JButton getjButtonDelete() {
        return jButtonDelete;
    }

    public void setjButtonDelete(JButton jButtonDelete) {
        this.jButtonDelete = jButtonDelete;
    }

    public JButton getjButtonDeleteSkijas() {
        return jButtonDeleteSkijas;
    }

    public void setjButtonDeleteSkijas(JButton jButtonDeleteSkijas) {
        this.jButtonDeleteSkijas = jButtonDeleteSkijas;
    }

    public JButton getjButtonSave() {
        return jButtonSave;
    }

    public void setjButtonSave(JButton jButtonSave) {
        this.jButtonSave = jButtonSave;
    }

    public JComboBox<Instruktor> getjComboBoxInstruktor() {
        return jComboBoxInstruktor;
    }

    public void setjComboBoxInstruktor(JComboBox<Instruktor> jComboBoxInstruktor) {
        this.jComboBoxInstruktor = jComboBoxInstruktor;
    }

    public JComboBox<Skijas> getjComboBoxSkijas() {
        return jComboBoxSkijas;
    }

    public void setjComboBoxSkijas(JComboBox<Skijas> jComboBoxSkijas) {
        this.jComboBoxSkijas = jComboBoxSkijas;
    }

    public JComboBox<TipTermina> getjComboBoxTipTermina() {
        return jComboBoxTipTermina;
    }

    public void setjComboBoxTipTermina(JComboBox<TipTermina> jComboBoxTipTermina) {
        this.jComboBoxTipTermina = jComboBoxTipTermina;
    }

    public JDateChooser getjDateChooser() {
        return jDateChooser;
    }

    public void setjDateChooser(JDateChooser jDateChooser) {
        this.jDateChooser = jDateChooser;
    }

    public JLabel getjLabel2() {
        return jLabel2;
    }

    public void setjLabel2(JLabel jLabel2) {
        this.jLabel2 = jLabel2;
    }

    public JLabel getjLabel3() {
        return jLabel3;
    }

    public void setjLabel3(JLabel jLabel3) {
        this.jLabel3 = jLabel3;
    }

    public JLabel getjLabel4() {
        return jLabel4;
    }

    public void setjLabel4(JLabel jLabel4) {
        this.jLabel4 = jLabel4;
    }

    public JLabel getjLabel5() {
        return jLabel5;
    }

    public void setjLabel5(JLabel jLabel5) {
        this.jLabel5 = jLabel5;
    }

    public JLabel getjLabel6() {
        return jLabel6;
    }

    public void setjLabel6(JLabel jLabel6) {
        this.jLabel6 = jLabel6;
    }

    public JLabel getjLabel7() {
        return jLabel7;
    }

    public void setjLabel7(JLabel jLabel7) {
        this.jLabel7 = jLabel7;
    }

    public JLabel getjLabel8() {
        return jLabel8;
    }

    public void setjLabel8(JLabel jLabel8) {
        this.jLabel8 = jLabel8;
    }

    public JLabel getjLabel9() {
        return jLabel9;
    }

    public void setjLabel9(JLabel jLabel9) {
        this.jLabel9 = jLabel9;
    }

    public JPanel getjPanel1() {
        return jPanel1;
    }

    public void setjPanel1(JPanel jPanel1) {
        this.jPanel1 = jPanel1;
    }

    public JPanel getjPanel2() {
        return jPanel2;
    }

    public void setjPanel2(JPanel jPanel2) {
        this.jPanel2 = jPanel2;
    }

    public JPanel getjPanel3() {
        return jPanel3;
    }

    public void setjPanel3(JPanel jPanel3) {
        this.jPanel3 = jPanel3;
    }

    public JScrollPane getjScrollPane1() {
        return jScrollPane1;
    }

    public void setjScrollPane1(JScrollPane jScrollPane1) {
        this.jScrollPane1 = jScrollPane1;
    }

    public JSpinner getjSpinnerBrojSkijasa() {
        return jSpinnerBrojSkijasa;
    }

    public void setjSpinnerBrojSkijasa(JSpinner jSpinnerBrojSkijasa) {
        this.jSpinnerBrojSkijasa = jSpinnerBrojSkijasa;
    }

    public JSpinner getjSpinnerVremeDo() {
        return jSpinnerVremeDo;
    }

    public void setjSpinnerVremeDo(JSpinner jSpinnerVremeDo) {
        this.jSpinnerVremeDo = jSpinnerVremeDo;
    }

    public JSpinner getjSpinnerVremeOd() {
        return jSpinnerVremeOd;
    }

    public void setjSpinnerVremeOd(JSpinner jSpinnerVremeOd) {
        this.jSpinnerVremeOd = jSpinnerVremeOd;
    }

    public JTable getjTableSkijasi() {
        return jTableSkijasi;
    }

    public void setjTableSkijasi(JTable jTableSkijasi) {
        this.jTableSkijasi = jTableSkijasi;
    }

    private void jButtonChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonChangeActionPerformed
       // jButtonChange.setVisible(false);
       // jButtonSave.setVisible(true);
       // configureFields(true);
    }//GEN-LAST:event_jButtonChangeActionPerformed

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
            /*Date utilDate = jDateChooser.getDate();
            LocalDate date = (utilDate == null) ? null : utilDate.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
       
            if (date == null) {
                JOptionPane.showMessageDialog(this, "Molimo izaberite datum!", "Greška", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if (date.isBefore(LocalDate.now())) {
                JOptionPane.showMessageDialog(this, "Ne možete zakazati termin u prošlosti!", "Greška", JOptionPane.ERROR_MESSAGE);
                return;
            }
       
            Date vremeOdDate = (Date) jSpinnerVremeOd.getValue();
            LocalTime vremeOd = vremeOdDate.toInstant().atZone(ZoneId.systemDefault()).toLocalTime();

            Date vremeDoDate = (Date) jSpinnerVremeDo.getValue();
            LocalTime vremeDo = vremeDoDate.toInstant().atZone(ZoneId.systemDefault()).toLocalTime();
            
            if (vremeDo.isBefore(vremeOd)) {
                JOptionPane.showMessageDialog(this, "Vreme završetka ne može biti pre početka!", "Greška", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
                        
            int brojSati = (int) Duration.between(vremeOd, vremeDo).toHours();

            int maxBrojSkijasa = (int) jSpinnerBrojSkijasa.getValue();
            
            if (maxBrojSkijasa<=0) {
                JOptionPane.showMessageDialog(this, "Broj skijaša mora biti veći od 0!", "Greška", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            TipTermina tip = (TipTermina) jComboBoxTipTermina.getSelectedItem();
            if(tip==null){
                JOptionPane.showMessageDialog(this, "Izaberite tip termina!", "Greška", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            TerminSkijasTableModel stm = (TerminSkijasTableModel) jTableSkijasi.getModel();
            int brojSkijasa = stm.getList().size();
            double ukupanIznos = brojSkijasa*brojSati*tip.getCenaSata();
            
            t.setBrojSati(brojSati);
            t.setMaxBrojSkijasa(maxBrojSkijasa);
            t.setDatum(date);
            t.setVremeOd(vremeOd);
            t.setVremeDo(vremeDo);
            t.setTipTermina(tip);
            t.setUkupanIznos(ukupanIznos);
            
        try {
            boolean b = Communication.getInstance().promeniTermin(t);
            JOptionPane.showMessageDialog(this, "Termin uspešno izmenjen!","Ažuriranje termina",JOptionPane.INFORMATION_MESSAGE);
            parent.fillTable(null);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Termin nije izmenjen!"+ex.getMessage(),"Ažuriranje termina",JOptionPane.ERROR_MESSAGE);
        }*/
    }//GEN-LAST:event_jButtonSaveActionPerformed

    private void jButtonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBackActionPerformed
        //this.dispose();
    }//GEN-LAST:event_jButtonBackActionPerformed

    private void jButtonAddSkijasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddSkijasActionPerformed
        /*TerminSkijas ts = new TerminSkijas((Skijas) jComboBoxSkijas.getSelectedItem(), t, LocalDate.now());
        
        TerminSkijasTableModel tstm = (TerminSkijasTableModel) jTableSkijasi.getModel();
        List<TerminSkijas> list = tstm.getList();
        int num = list.size();
        if(num==t.getMaxBrojSkijasa()){
            JOptionPane.showMessageDialog(this, "Dostigli se maksimalan kapacitet skijaša za izabrani termin.","Dodavanje skijaša",JOptionPane.WARNING_MESSAGE);
            return;
        }
        try {
            boolean b = Communication.getInstance().kreirajTerminSkijas(ts);
            if(b){
                JOptionPane.showMessageDialog(this, "Uspešno dodat skijaš.","Dodavanje skijaša",JOptionPane.INFORMATION_MESSAGE);
                fillTable();
                double cena = t.getBrojSati() * t.getTipTermina().getCenaSata();
                t.setUkupanIznos(t.getUkupanIznos()+cena);
                Communication.getInstance().promeniTermin(t);
                parent.fillTable(null);
            }
        } catch (SQLIntegrityConstraintViolationException e) {
            JOptionPane.showMessageDialog(this, "Greška prilikom dodavanja skijaša, već postoji","Dodavanje skijaša",JOptionPane.ERROR_MESSAGE);
        
        }
        catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Greška prilikom dodavanja skijaša."+ex.getMessage(),"Dodavanje skijaša",JOptionPane.ERROR_MESSAGE);
        }*/
    }//GEN-LAST:event_jButtonAddSkijasActionPerformed

    private void jButtonDeleteSkijasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteSkijasActionPerformed
        /*
        int row = jTableSkijasi.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Morate izabrati skijaša!", "Greška", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        TerminSkijasTableModel tstm = (TerminSkijasTableModel) jTableSkijasi.getModel();
        List<TerminSkijas> list = tstm.getList();
        TerminSkijas ts = list.get(row);
        
        
        try {
            boolean b = Communication.getInstance().obrisiTerminSkijas(ts);
            if(b){
                JOptionPane.showMessageDialog(this, "Uspešno obrisan skijaš.","Brisanje skijaša",JOptionPane.INFORMATION_MESSAGE);
                fillTable();
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Greška prilikom brisanja skijaša."+ex.getMessage(),"Brisanje skijaša",JOptionPane.ERROR_MESSAGE);
        }*/
    }//GEN-LAST:event_jButtonDeleteSkijasActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
      /*int i =JOptionPane.showConfirmDialog(rootPane, "Da li ste sigurni da želite da obrišete termin?","Brisanje termina",JOptionPane.YES_NO_OPTION);
        
        if(i == JOptionPane.YES_OPTION){
            try {

                boolean b = Communication.getInstance().obrisiTermin(t);
                if(b){
                    JOptionPane.showMessageDialog(rootPane, "Uspešno obrisan termin.","Brisanje termina",JOptionPane.INFORMATION_MESSAGE);
                    parent.fillTable(null);
                    this.dispose();
                    }
            } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, "Greška prilikom brisanja termina.\n"+ex.getMessage(),"Brisanje termina",JOptionPane.ERROR_MESSAGE);
            }
        }*/
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAddSkijas;
    private javax.swing.JButton jButtonBack;
    private javax.swing.JButton jButtonChange;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonDeleteSkijas;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JComboBox<Instruktor> jComboBoxInstruktor;
    private javax.swing.JComboBox<Skijas> jComboBoxSkijas;
    private javax.swing.JComboBox<TipTermina> jComboBoxTipTermina;
    private com.toedter.calendar.JDateChooser jDateChooser;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinnerBrojSkijasa;
    private javax.swing.JSpinner jSpinnerVremeDo;
    private javax.swing.JSpinner jSpinnerVremeOd;
    private javax.swing.JTable jTableSkijasi;
    // End of variables declaration//GEN-END:variables
    /*private void fillComboBoxes() {
        try {
            List<Instruktor> listIns = Communication.getInstance().vratiListuSviInstruktor();
            for(Instruktor i : listIns){
                jComboBoxInstruktor.addItem(i);
            }
            
            List<TipTermina> listTip = Communication.getInstance().vratiListuSviTipTermina();
            for(TipTermina t : listTip){
                jComboBoxTipTermina.addItem(t);
            }
            
            List<Skijas> listSki = Communication.getInstance().vratiListuSviSkijas();
            for(Skijas s : listSki){
                jComboBoxSkijas.addItem(s);
            }
            
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, "Greska prilikom punjenja CB."+ex.getMessage(),"Punjenje CB",JOptionPane.ERROR_MESSAGE);
        }
    }

    private void fillFields() {
        jDateChooser.setDate(Date.from(t.getDatum().atStartOfDay(ZoneId.systemDefault()).toInstant()));
        jSpinnerVremeOd.setValue(java.sql.Time.valueOf(t.getVremeOd()));
        jSpinnerVremeDo.setValue(java.sql.Time.valueOf(t.getVremeDo()));
        jSpinnerBrojSkijasa.setValue(t.getMaxBrojSkijasa());
        
        for(int i=0;i<jComboBoxInstruktor.getItemCount();i++){
            if(jComboBoxInstruktor.getItemAt(i).equals(t.getInstruktor())){
                jComboBoxInstruktor.setSelectedIndex(i);
                break;
            }
        }
        
        for(int i=0;i<jComboBoxTipTermina.getItemCount();i++){
            if(jComboBoxTipTermina.getItemAt(i).equals(t.getTipTermina())){
                jComboBoxTipTermina.setSelectedIndex(i);
                break;
            }
        }
    }

    private void configureFields(boolean b) {
        
        jComboBoxInstruktor.setEnabled(false);
        jComboBoxTipTermina.setEnabled(b);
        jSpinnerVremeDo.setEnabled(b);
        jSpinnerVremeOd.setEnabled(b);
        jSpinnerBrojSkijasa.setEnabled(b);
        jDateChooser.setEnabled(b);
    }

    private void fillTable() {
        try {
            List<TerminSkijas> list = Communication.getInstance().vratiListuTerminSkijas(t);
            TerminSkijasTableModel tstm = new TerminSkijasTableModel(list);
            jTableSkijasi.setModel(tstm);
        } catch (Exception ex) {
            Logger.getLogger(TerminDetaljiDialog.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void configureVisibility() {
        jButtonSave.setVisible(false);
        boolean my = t.getInstruktor().equals(parent.getUlogovan());
        boolean date = t.getDatum().isBefore(LocalDate.now());
        boolean visible = true;
            if(!my || date)
                visible = false;
        jButtonDelete.setVisible(visible);
        jButtonAddSkijas.setVisible(visible);
        jButtonChange.setVisible(visible);
        jButtonDeleteSkijas.setVisible(visible);
        jComboBoxSkijas.setVisible(visible);
    }*/
    
    public void backActionListener(ActionListener actionListener) {
        jButtonBack.addActionListener(actionListener);
    }

    public void changeActionListener(ActionListener actionListener) {
        jButtonChange.addActionListener(actionListener);
    }

    public void saveActionListener(ActionListener actionListener) {
        jButtonSave.addActionListener(actionListener);
    }

    public void deleteActionListener(ActionListener actionListener) {
        jButtonDelete.addActionListener(actionListener);
    }

    public void addSkijasActionListener(ActionListener actionListener) {
        jButtonAddSkijas.addActionListener(actionListener);
    }

    public void deleteSkijasActionListener(ActionListener actionListener) {
        jButtonDeleteSkijas.addActionListener(actionListener);
    }
    
}
